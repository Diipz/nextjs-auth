// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrganisationType {
  Practice
  PCN
}

model User {
  id                 String           @id @default(cuid()) @db.VarChar(255)
  organisationName   String           @db.VarChar(255)
  firstName          String           @db.VarChar(255)
  lastName           String           @db.VarChar(255)
  password           String           @db.VarChar(255)
  email              String           @unique @db.VarChar(255)
  emailVerified      DateTime?        @map("email_verified") @db.DateTime
  phone              String           @db.VarChar(255)
  image              String?          @db.VarChar(255)
  stripe_customer_id String?          @db.VarChar(255)
  organisationType   OrganisationType @default(Practice)
  accounts           Account[]
  sessions           Session[]

  @@map("users")
}

model Associate {
  id                 String    @id @default(cuid()) @db.VarChar(255)
  firstName          String    @db.VarChar(255)
  lastName           String    @db.VarChar(255)
  password           String    @db.VarChar(255)
  email              String    @unique @db.VarChar(255)
  emailVerified      DateTime? @map("email_verified") @db.DateTime
  phone              String    @db.VarChar(255)
  image              String?   @db.VarChar(255)
  stripe_customer_id String?   @db.VarChar(255)
  accounts           Account[]
  sessions           Session[]

  @@map("associates")
}

model Account {
  id                String  @id @default(cuid()) @db.VarChar(255)
  userId            String? @map("user_id") @db.VarChar(255)
  associateId       String? @db.VarChar(255)
  type              String  @db.VarChar(255)
  provider          String  @db.VarChar(255)
  providerAccountId String  @map("provider_account_id") @db.VarChar(255)
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?    @db.Int
  token_type        String? @db.VarChar(255)
  scope             String? @db.Text
  id_token          String? @db.Text
  session_state     String? @db.VarChar(255)

  user      User?      @relation(fields: [userId], references: [id], onDelete: Cascade)
  Associate Associate? @relation(fields: [associateId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String     @id @default(cuid()) @db.VarChar(255)
  sessionToken String     @unique @map("session_token") @db.VarChar(255)
  userId       String     @map("user_id") @db.VarChar(255)
  expires      DateTime   @db.DateTime
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  Associate    Associate? @relation(fields: [associateId], references: [id], onDelete: Cascade)
  associateId  String?    @db.VarChar(255)

  @@map("sessions")
}

model VerificationToken {
  identifier String   @db.VarChar(255)
  token      String   @db.VarChar(255)
  expires    DateTime @db.DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}
